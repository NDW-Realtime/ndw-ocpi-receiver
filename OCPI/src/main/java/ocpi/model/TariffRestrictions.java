/*
 * roaming-location-prd
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ocpi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
/**
 * TariffRestrictions
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-31T14:42:19.145134152+02:00[Europe/Amsterdam]")
public class TariffRestrictions {
  @JsonProperty("start_time")
  private String startTime = null;

  @JsonProperty("end_time")
  private String endTime = null;

  @JsonProperty("start_date")
  private String startDate = null;

  @JsonProperty("end_date")
  private String endDate = null;

  @JsonProperty("min_kwh")
  private Integer minKwh = null;

  @JsonProperty("max_kwh")
  private Integer maxKwh = null;

  @JsonProperty("min_power")
  private Integer minPower = null;

  @JsonProperty("max_power")
  private Integer maxPower = null;

  @JsonProperty("min_duration")
  private Integer minDuration = null;

  @JsonProperty("max_duration")
  private Integer maxDuration = null;

  /**
   * Gets or Sets dayOfWeek
   */
  public enum DayOfWeekEnum {
    MONDAY("MONDAY"),
    TUESDAY("TUESDAY"),
    WEDNESDAY("WEDNESDAY"),
    THURSDAY("THURSDAY"),
    FRIDAY("FRIDAY"),
    SATURDAY("SATURDAY"),
    SUNDAY("SUNDAY");

    private String value;

    DayOfWeekEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static DayOfWeekEnum fromValue(String text) {
      for (DayOfWeekEnum b : DayOfWeekEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("day_of_week")
  private List<DayOfWeekEnum> dayOfWeek = null;

  public TariffRestrictions startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @Schema(description = "")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public TariffRestrictions endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @Schema(description = "")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public TariffRestrictions startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public TariffRestrictions endDate(String endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public String getEndDate() {
    return endDate;
  }

  public void setEndDate(String endDate) {
    this.endDate = endDate;
  }

  public TariffRestrictions minKwh(Integer minKwh) {
    this.minKwh = minKwh;
    return this;
  }

   /**
   * Get minKwh
   * @return minKwh
  **/
  @Schema(description = "")
  public Integer getMinKwh() {
    return minKwh;
  }

  public void setMinKwh(Integer minKwh) {
    this.minKwh = minKwh;
  }

  public TariffRestrictions maxKwh(Integer maxKwh) {
    this.maxKwh = maxKwh;
    return this;
  }

   /**
   * Get maxKwh
   * @return maxKwh
  **/
  @Schema(description = "")
  public Integer getMaxKwh() {
    return maxKwh;
  }

  public void setMaxKwh(Integer maxKwh) {
    this.maxKwh = maxKwh;
  }

  public TariffRestrictions minPower(Integer minPower) {
    this.minPower = minPower;
    return this;
  }

   /**
   * Get minPower
   * @return minPower
  **/
  @Schema(description = "")
  public Integer getMinPower() {
    return minPower;
  }

  public void setMinPower(Integer minPower) {
    this.minPower = minPower;
  }

  public TariffRestrictions maxPower(Integer maxPower) {
    this.maxPower = maxPower;
    return this;
  }

   /**
   * Get maxPower
   * @return maxPower
  **/
  @Schema(description = "")
  public Integer getMaxPower() {
    return maxPower;
  }

  public void setMaxPower(Integer maxPower) {
    this.maxPower = maxPower;
  }

  public TariffRestrictions minDuration(Integer minDuration) {
    this.minDuration = minDuration;
    return this;
  }

   /**
   * Get minDuration
   * @return minDuration
  **/
  @Schema(description = "")
  public Integer getMinDuration() {
    return minDuration;
  }

  public void setMinDuration(Integer minDuration) {
    this.minDuration = minDuration;
  }

  public TariffRestrictions maxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
    return this;
  }

   /**
   * Get maxDuration
   * @return maxDuration
  **/
  @Schema(description = "")
  public Integer getMaxDuration() {
    return maxDuration;
  }

  public void setMaxDuration(Integer maxDuration) {
    this.maxDuration = maxDuration;
  }

  public TariffRestrictions dayOfWeek(List<DayOfWeekEnum> dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
    return this;
  }

  public TariffRestrictions addDayOfWeekItem(DayOfWeekEnum dayOfWeekItem) {
    if (this.dayOfWeek == null) {
      this.dayOfWeek = new ArrayList<>();
    }
    this.dayOfWeek.add(dayOfWeekItem);
    return this;
  }

   /**
   * Get dayOfWeek
   * @return dayOfWeek
  **/
  @Schema(description = "")
  public List<DayOfWeekEnum> getDayOfWeek() {
    return dayOfWeek;
  }

  public void setDayOfWeek(List<DayOfWeekEnum> dayOfWeek) {
    this.dayOfWeek = dayOfWeek;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TariffRestrictions tariffRestrictions = (TariffRestrictions) o;
    return Objects.equals(this.startTime, tariffRestrictions.startTime) &&
        Objects.equals(this.endTime, tariffRestrictions.endTime) &&
        Objects.equals(this.startDate, tariffRestrictions.startDate) &&
        Objects.equals(this.endDate, tariffRestrictions.endDate) &&
        Objects.equals(this.minKwh, tariffRestrictions.minKwh) &&
        Objects.equals(this.maxKwh, tariffRestrictions.maxKwh) &&
        Objects.equals(this.minPower, tariffRestrictions.minPower) &&
        Objects.equals(this.maxPower, tariffRestrictions.maxPower) &&
        Objects.equals(this.minDuration, tariffRestrictions.minDuration) &&
        Objects.equals(this.maxDuration, tariffRestrictions.maxDuration) &&
        Objects.equals(this.dayOfWeek, tariffRestrictions.dayOfWeek);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startTime, endTime, startDate, endDate, minKwh, maxKwh, minPower, maxPower, minDuration, maxDuration, dayOfWeek);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TariffRestrictions {\n");
    
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    minKwh: ").append(toIndentedString(minKwh)).append("\n");
    sb.append("    maxKwh: ").append(toIndentedString(maxKwh)).append("\n");
    sb.append("    minPower: ").append(toIndentedString(minPower)).append("\n");
    sb.append("    maxPower: ").append(toIndentedString(maxPower)).append("\n");
    sb.append("    minDuration: ").append(toIndentedString(minDuration)).append("\n");
    sb.append("    maxDuration: ").append(toIndentedString(maxDuration)).append("\n");
    sb.append("    dayOfWeek: ").append(toIndentedString(dayOfWeek)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
