/*
 * roaming-location-prd
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ocpi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import ocpi.model.EnergyMix;
import ocpi.model.OcpiDisplayText;
import ocpi.model.TariffElement;
/**
 * OcpiTariff
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-31T14:42:19.145134152+02:00[Europe/Amsterdam]")
public class OcpiTariff {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("currency")
  private String currency = null;

  @JsonProperty("tariff_alt_text")
  private List<OcpiDisplayText> tariffAltText = null;

  @JsonProperty("tariff_alt_url")
  private String tariffAltUrl = null;

  @JsonProperty("elements")
  private List<TariffElement> elements = new ArrayList<>();

  @JsonProperty("energy_mix")
  private List<EnergyMix> energyMix = null;

  @JsonProperty("last_updated")
  private OffsetDateTime lastUpdated = null;

  public OcpiTariff id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public OcpiTariff currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(required = true, description = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public OcpiTariff tariffAltText(List<OcpiDisplayText> tariffAltText) {
    this.tariffAltText = tariffAltText;
    return this;
  }

  public OcpiTariff addTariffAltTextItem(OcpiDisplayText tariffAltTextItem) {
    if (this.tariffAltText == null) {
      this.tariffAltText = new ArrayList<>();
    }
    this.tariffAltText.add(tariffAltTextItem);
    return this;
  }

   /**
   * Get tariffAltText
   * @return tariffAltText
  **/
  @Schema(description = "")
  public List<OcpiDisplayText> getTariffAltText() {
    return tariffAltText;
  }

  public void setTariffAltText(List<OcpiDisplayText> tariffAltText) {
    this.tariffAltText = tariffAltText;
  }

  public OcpiTariff tariffAltUrl(String tariffAltUrl) {
    this.tariffAltUrl = tariffAltUrl;
    return this;
  }

   /**
   * Get tariffAltUrl
   * @return tariffAltUrl
  **/
  @Schema(description = "")
  public String getTariffAltUrl() {
    return tariffAltUrl;
  }

  public void setTariffAltUrl(String tariffAltUrl) {
    this.tariffAltUrl = tariffAltUrl;
  }

  public OcpiTariff elements(List<TariffElement> elements) {
    this.elements = elements;
    return this;
  }

  public OcpiTariff addElementsItem(TariffElement elementsItem) {
    this.elements.add(elementsItem);
    return this;
  }

   /**
   * Get elements
   * @return elements
  **/
  @Schema(required = true, description = "")
  public List<TariffElement> getElements() {
    return elements;
  }

  public void setElements(List<TariffElement> elements) {
    this.elements = elements;
  }

  public OcpiTariff energyMix(List<EnergyMix> energyMix) {
    this.energyMix = energyMix;
    return this;
  }

  public OcpiTariff addEnergyMixItem(EnergyMix energyMixItem) {
    if (this.energyMix == null) {
      this.energyMix = new ArrayList<>();
    }
    this.energyMix.add(energyMixItem);
    return this;
  }

   /**
   * Get energyMix
   * @return energyMix
  **/
  @Schema(description = "")
  public List<EnergyMix> getEnergyMix() {
    return energyMix;
  }

  public void setEnergyMix(List<EnergyMix> energyMix) {
    this.energyMix = energyMix;
  }

  public OcpiTariff lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OcpiTariff ocpiTariff = (OcpiTariff) o;
    return Objects.equals(this.id, ocpiTariff.id) &&
        Objects.equals(this.currency, ocpiTariff.currency) &&
        Objects.equals(this.tariffAltText, ocpiTariff.tariffAltText) &&
        Objects.equals(this.tariffAltUrl, ocpiTariff.tariffAltUrl) &&
        Objects.equals(this.elements, ocpiTariff.elements) &&
        Objects.equals(this.energyMix, ocpiTariff.energyMix) &&
        Objects.equals(this.lastUpdated, ocpiTariff.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currency, tariffAltText, tariffAltUrl, elements, energyMix, lastUpdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OcpiTariff {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    tariffAltText: ").append(toIndentedString(tariffAltText)).append("\n");
    sb.append("    tariffAltUrl: ").append(toIndentedString(tariffAltUrl)).append("\n");
    sb.append("    elements: ").append(toIndentedString(elements)).append("\n");
    sb.append("    energyMix: ").append(toIndentedString(energyMix)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
