/*
 * roaming-location-prd
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ocpi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import ocpi.model.OcpiConnector;
import ocpi.model.OcpiDisplayText;
import ocpi.model.OcpiGeoLocation;
import ocpi.model.OcpiImage;
import ocpi.model.StatusSchedule;
/**
 * OcpiEvse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-03-31T14:42:19.145134152+02:00[Europe/Amsterdam]")
public class OcpiEvse {
  @JsonProperty("uid")
  private String uid = null;

  @JsonProperty("evse_id")
  private String evseId = null;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    AVAILABLE("AVAILABLE"),
    BLOCKED("BLOCKED"),
    CHARGING("CHARGING"),
    INOPERATIVE("INOPERATIVE"),
    OUTOFORDER("OUTOFORDER"),
    PLANNED("PLANNED"),
    REMOVED("REMOVED"),
    RESERVED("RESERVED"),
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("status_schedule")
  private List<StatusSchedule> statusSchedule = null;

  /**
   * Gets or Sets capabilities
   */
  public enum CapabilitiesEnum {
    CHARGING_PROFILE_CAPABLE("CHARGING_PROFILE_CAPABLE"),
    CREDIT_CARD_PAYABLE("CREDIT_CARD_PAYABLE"),
    REMOTE_START_STOP_CAPABLE("REMOTE_START_STOP_CAPABLE"),
    RESERVABLE("RESERVABLE"),
    RFID_READER("RFID_READER"),
    UNLOCK_CAPABLE("UNLOCK_CAPABLE");

    private String value;

    CapabilitiesEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static CapabilitiesEnum fromValue(String text) {
      for (CapabilitiesEnum b : CapabilitiesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("capabilities")
  private List<CapabilitiesEnum> capabilities = null;

  @JsonProperty("connectors")
  private List<OcpiConnector> connectors = new ArrayList<>();

  @JsonProperty("floor_level")
  private String floorLevel = null;

  @JsonProperty("coordinates")
  private OcpiGeoLocation coordinates = null;

  @JsonProperty("physical_reference")
  private String physicalReference = null;

  @JsonProperty("directions")
  private List<OcpiDisplayText> directions = null;

  /**
   * Gets or Sets parkingRestrictions
   */
  public enum ParkingRestrictionsEnum {
    EV_ONLY("EV_ONLY"),
    PLUGGED("PLUGGED"),
    DISABLED("DISABLED"),
    CUSTOMERS("CUSTOMERS"),
    MOTORCYCLES("MOTORCYCLES");

    private String value;

    ParkingRestrictionsEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static ParkingRestrictionsEnum fromValue(String text) {
      for (ParkingRestrictionsEnum b : ParkingRestrictionsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("parking_restrictions")
  private List<ParkingRestrictionsEnum> parkingRestrictions = null;

  @JsonProperty("images")
  private List<OcpiImage> images = null;

  @JsonProperty("last_updated")
  private OffsetDateTime lastUpdated = null;

  public OcpiEvse uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * Get uid
   * @return uid
  **/
  @Schema(required = true, description = "")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public OcpiEvse evseId(String evseId) {
    this.evseId = evseId;
    return this;
  }

   /**
   * Get evseId
   * @return evseId
  **/
  @Schema(description = "")
  public String getEvseId() {
    return evseId;
  }

  public void setEvseId(String evseId) {
    this.evseId = evseId;
  }

  public OcpiEvse status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public OcpiEvse statusSchedule(List<StatusSchedule> statusSchedule) {
    this.statusSchedule = statusSchedule;
    return this;
  }

  public OcpiEvse addStatusScheduleItem(StatusSchedule statusScheduleItem) {
    if (this.statusSchedule == null) {
      this.statusSchedule = new ArrayList<>();
    }
    this.statusSchedule.add(statusScheduleItem);
    return this;
  }

   /**
   * Get statusSchedule
   * @return statusSchedule
  **/
  @Schema(description = "")
  public List<StatusSchedule> getStatusSchedule() {
    return statusSchedule;
  }

  public void setStatusSchedule(List<StatusSchedule> statusSchedule) {
    this.statusSchedule = statusSchedule;
  }

  public OcpiEvse capabilities(List<CapabilitiesEnum> capabilities) {
    this.capabilities = capabilities;
    return this;
  }

  public OcpiEvse addCapabilitiesItem(CapabilitiesEnum capabilitiesItem) {
    if (this.capabilities == null) {
      this.capabilities = new ArrayList<>();
    }
    this.capabilities.add(capabilitiesItem);
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @Schema(description = "")
  public List<CapabilitiesEnum> getCapabilities() {
    return capabilities;
  }

  public void setCapabilities(List<CapabilitiesEnum> capabilities) {
    this.capabilities = capabilities;
  }

  public OcpiEvse connectors(List<OcpiConnector> connectors) {
    this.connectors = connectors;
    return this;
  }

  public OcpiEvse addConnectorsItem(OcpiConnector connectorsItem) {
    this.connectors.add(connectorsItem);
    return this;
  }

   /**
   * Get connectors
   * @return connectors
  **/
  @Schema(required = true, description = "")
  public List<OcpiConnector> getConnectors() {
    return connectors;
  }

  public void setConnectors(List<OcpiConnector> connectors) {
    this.connectors = connectors;
  }

  public OcpiEvse floorLevel(String floorLevel) {
    this.floorLevel = floorLevel;
    return this;
  }

   /**
   * Get floorLevel
   * @return floorLevel
  **/
  @Schema(description = "")
  public String getFloorLevel() {
    return floorLevel;
  }

  public void setFloorLevel(String floorLevel) {
    this.floorLevel = floorLevel;
  }

  public OcpiEvse coordinates(OcpiGeoLocation coordinates) {
    this.coordinates = coordinates;
    return this;
  }

   /**
   * Get coordinates
   * @return coordinates
  **/
  @Schema(description = "")
  public OcpiGeoLocation getCoordinates() {
    return coordinates;
  }

  public void setCoordinates(OcpiGeoLocation coordinates) {
    this.coordinates = coordinates;
  }

  public OcpiEvse physicalReference(String physicalReference) {
    this.physicalReference = physicalReference;
    return this;
  }

   /**
   * Get physicalReference
   * @return physicalReference
  **/
  @Schema(description = "")
  public String getPhysicalReference() {
    return physicalReference;
  }

  public void setPhysicalReference(String physicalReference) {
    this.physicalReference = physicalReference;
  }

  public OcpiEvse directions(List<OcpiDisplayText> directions) {
    this.directions = directions;
    return this;
  }

  public OcpiEvse addDirectionsItem(OcpiDisplayText directionsItem) {
    if (this.directions == null) {
      this.directions = new ArrayList<>();
    }
    this.directions.add(directionsItem);
    return this;
  }

   /**
   * Get directions
   * @return directions
  **/
  @Schema(description = "")
  public List<OcpiDisplayText> getDirections() {
    return directions;
  }

  public void setDirections(List<OcpiDisplayText> directions) {
    this.directions = directions;
  }

  public OcpiEvse parkingRestrictions(List<ParkingRestrictionsEnum> parkingRestrictions) {
    this.parkingRestrictions = parkingRestrictions;
    return this;
  }

  public OcpiEvse addParkingRestrictionsItem(ParkingRestrictionsEnum parkingRestrictionsItem) {
    if (this.parkingRestrictions == null) {
      this.parkingRestrictions = new ArrayList<>();
    }
    this.parkingRestrictions.add(parkingRestrictionsItem);
    return this;
  }

   /**
   * Get parkingRestrictions
   * @return parkingRestrictions
  **/
  @Schema(description = "")
  public List<ParkingRestrictionsEnum> getParkingRestrictions() {
    return parkingRestrictions;
  }

  public void setParkingRestrictions(List<ParkingRestrictionsEnum> parkingRestrictions) {
    this.parkingRestrictions = parkingRestrictions;
  }

  public OcpiEvse images(List<OcpiImage> images) {
    this.images = images;
    return this;
  }

  public OcpiEvse addImagesItem(OcpiImage imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @Schema(description = "")
  public List<OcpiImage> getImages() {
    return images;
  }

  public void setImages(List<OcpiImage> images) {
    this.images = images;
  }

  public OcpiEvse lastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @Schema(required = true, description = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(OffsetDateTime lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OcpiEvse ocpiEvse = (OcpiEvse) o;
    return Objects.equals(this.uid, ocpiEvse.uid) &&
        Objects.equals(this.evseId, ocpiEvse.evseId) &&
        Objects.equals(this.status, ocpiEvse.status) &&
        Objects.equals(this.statusSchedule, ocpiEvse.statusSchedule) &&
        Objects.equals(this.capabilities, ocpiEvse.capabilities) &&
        Objects.equals(this.connectors, ocpiEvse.connectors) &&
        Objects.equals(this.floorLevel, ocpiEvse.floorLevel) &&
        Objects.equals(this.coordinates, ocpiEvse.coordinates) &&
        Objects.equals(this.physicalReference, ocpiEvse.physicalReference) &&
        Objects.equals(this.directions, ocpiEvse.directions) &&
        Objects.equals(this.parkingRestrictions, ocpiEvse.parkingRestrictions) &&
        Objects.equals(this.images, ocpiEvse.images) &&
        Objects.equals(this.lastUpdated, ocpiEvse.lastUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uid, evseId, status, statusSchedule, capabilities, connectors, floorLevel, coordinates, physicalReference, directions, parkingRestrictions, images, lastUpdated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OcpiEvse {\n");
    
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    evseId: ").append(toIndentedString(evseId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusSchedule: ").append(toIndentedString(statusSchedule)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    connectors: ").append(toIndentedString(connectors)).append("\n");
    sb.append("    floorLevel: ").append(toIndentedString(floorLevel)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    physicalReference: ").append(toIndentedString(physicalReference)).append("\n");
    sb.append("    directions: ").append(toIndentedString(directions)).append("\n");
    sb.append("    parkingRestrictions: ").append(toIndentedString(parkingRestrictions)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
